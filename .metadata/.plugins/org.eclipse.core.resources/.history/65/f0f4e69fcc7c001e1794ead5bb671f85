/*
 * MIDI.c
 *
 *  Created on: Nov 1, 2023
 *      Author: Andrea Llorente Gomez
 *
 */
#include "MIDI/MIDI.h"
#include "main.h"
#include "stm32f4xx_hal.h"

#include <stdbool.h>
#include <stdint.h>

/* Declaraci√≥n de USART (externa) */
extern UART_HandleTypeDef huart2;

void BucleMIDI(){
	uint8_t resultado_anterior[16] = {0};
	for (uint8_t control = 0; control<16; control++){
		bool pulsado1 = false;
		pulsado1 = IdentifyNote(control);
		if (pulsado1){
			if (resultado_anterior[control] != 1){
				Send_MIDINoteOn(control);
				resultado_anterior[control] = 1;
			}
		}else{
			if(resultado_anterior[control] == 1){
				Send_MIDINoteOff(control);
				resultado_anterior[control] = 0;
			}
		}
	}
}

uint8_t IdentifyNote(uint8_t control){
	WriteControl(control);
	bool pulsado1 = false;
	pulsado1 = HAL_GPIO_ReadPin(GPIOA, I1_Pin);
	return pulsado1;
}

void WriteControl(uint8_t control){
	uint8_t S0 = control & 0x01;
	uint8_t S1 = control & 0x02;
	uint8_t S2 = control & 0x04;
	uint8_t S3 = control & 0x08;
	HAL_GPIO_WritePin(GPIOA, S0_Pin, S0 ? GPIO_PIN_SET : GPIO_PIN_RESET);
	HAL_GPIO_WritePin(GPIOB, S1_Pin, S1 ? GPIO_PIN_SET : GPIO_PIN_RESET);
	HAL_GPIO_WritePin(GPIOB, S2_Pin, S2 ? GPIO_PIN_SET : GPIO_PIN_RESET);
	HAL_GPIO_WritePin(GPIOA, S3_Pin, S3 ? GPIO_PIN_SET : GPIO_PIN_RESET);
}

void Send_MIDINoteOn(uint8_t control){
//	uint8_t MIDI_do[3] = {0x90, 0x00, 0x7F};
	switch (control)
	{
		case 0:
			HAL_UART_Transmit(&huart2, (uint8_t*)&{0x90, 0x00, 0x7F}, 3, 100);
		break;
	}
}

